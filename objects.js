const objects = Array.from({ length: 15 }).map((_, i) => ({
  title: `–û–±—ä–µ–∫—Ç ‚Ññ${i + 1}`,
  status: i % 3 === 0 ? "–ê–∫—Ç–∏–≤–Ω—ã–π" : i % 3 === 1 ? "–ó–∞–≤–µ—Ä—à—ë–Ω" : "–ù–∞ –ø–∞—É–∑–µ",
  progress: Math.floor(Math.random() * 100),
  fio: `–§–ò–û ‚Ññ${i + 1}`,
  start: "01.01.2023",
  end: "31.12.2024",
  district: `–†–∞–π–æ–Ω ${Math.floor(i / 3) + 1}`,
  budget: `${10 + i} –º–ª–Ω ‚ÇΩ`,
  spent: `${(5 + i * 0.3).toFixed(1)} –º–ª–Ω ‚ÇΩ`,
  violations: Math.floor(Math.random() * 5),
  checks: Math.floor(Math.random() * 3),
  docs: `${Math.floor(Math.random() * 100)}%`,
  laurey: i % 2 === 0 ? "–µ—Å—Ç—å" : "–Ω–µ—Ç",
  photos: Math.floor(Math.random() * 20),
}));

function renderCards(list) {
  const container = document.getElementById("objectList");
  container.innerHTML = "";
  list.forEach(obj => {
    const card = document.createElement("div");
    card.className = "object-card";
    card.innerHTML = `
      <div class="card-header">
        <h3>${obj.title}</h3>
        <span class="status ${obj.status}">${obj.status}</span>
      </div>
      <div class="progress"><div class="bar" style="width: ${obj.progress}%"></div></div>
      <p class="percent">${obj.progress}%</p>
      <div class="meta">
        <span>${obj.fio}</span>
        <span>${obj.start} ‚Äì ${obj.end}</span>
        <span>${obj.district}</span>
        <span>üí∞ ${obj.budget} / ${obj.spent}</span>
        <span>‚ö†Ô∏è –ù–∞—Ä—É—à–µ–Ω–∏–π: ${obj.violations}, –ø—Ä–æ–≤–µ—Ä–æ–∫: ${obj.checks}</span>
        <span>üìã –î–æ–∫—É–º–µ–Ω—Ç—ã: ${obj.docs}, –ª–∞—É—Ä–∏–π: ${obj.laurey}</span>
        <span>üì∑ ${obj.photos} —Ñ–æ—Ç–æ</span>
      </div>
      <div class="actions">
        <button>–ü–æ–¥—Ä–æ–±–Ω–µ–µ</button>
        <button>PDF</button>
        <button>‚úèÔ∏è</button>
      </div>
    `;
    container.appendChild(card);
  });
}

document.getElementById("searchInput").addEventListener("input", function () {
  const val = this.value.toLowerCase();
  const filtered = objects.filter(o => o.title.toLowerCase().includes(val));
  renderCards(filtered);
});

renderCards(objects);
